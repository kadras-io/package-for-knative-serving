#@data/values-schema
---

#@schema/desc "PEM-encoded certificate data to trust TLS connections with a custom CA."
ca_cert_data: ""

#@schema/desc "Settings for the Kyverno policies."
policies:
  #@schema/desc "Whether to include the out-of-the-box Kyverno policies to validate and secure the package installation."
  include: false

#@schema/desc "Domain name for Knative Services. It must be a valid DNS name. Stored in the `config-domain` ConfigMap."
#@schema/validation min_len=4
domain_name: ""

#@schema/desc "A reference to the ClusterIssuer to use if you want to enable autoTLS. Stored in the `config-certmanager` ConfigMap."
#@schema/examples ("Kadras private CA", "kadras-ca-issuer")
ingress_issuer: ""

#@schema/desc "Settings for the Knative Serving workloads."
workloads:
  activator:
    #@schema/desc "The minimum number of replicas as controlled by a HorizontalPodAutoscaler. In order to enable high availability, it should be greater than 1."
    #@schema/validation min=1, max=20
    minReplicas: 1
  autoscaler:
    #@schema/desc "The number of replicas for this Deployment. In order to enable high availability, it should be greater than 1."
    #@schema/validation min=1
    replicas: 1
  controller:
    #@schema/desc "The number of replicas for this Deployment. In order to enable high availability, it should be greater than 1."
    #@schema/validation min=1
    replicas: 1
  domain_mapping:
    #@schema/desc "The number of replicas for this Deployment. In order to enable high availability, it should be greater than 1."
    #@schema/validation min=1
    replicas: 1
  domain_mapping_webhook:
    #@schema/desc "The number of replicas for this Deployment. In order to enable high availability, it should be greater than 1."
    #@schema/validation min=1
    replicas: 1
  webhook:
    #@schema/desc "The minimum number of replicas as controlled by a HorizontalPodAutoscaler. In order to enable high availability, it should be greater than 1."
    #@schema/validation min=1, max=5
    minReplicas: 1

#@schema/desc "Settings for the Knative Serving ConfigMaps."
config:

  #@schema/desc "Deployment configuration stored in the `config-deployment` ConfigMap."
  deployment:
    #@schema/desc "The duration to wait for the deployment to be ready before considering it failed."
    progress-deadline: "600s"
    #@schema/desc "The queue proxy's CPU request. If omitted, a default value (currently '25m'), is used."
    queue-sidecar-cpu-request: "25m"
    #@schema/desc "The queue proxy's CPU limit. If omitted, no value is specified and the system default is used."
    queue-sidecar-cpu-limit: "1000m"
    #@schema/desc "The queue proxy's memory request. If omitted, no value is specified and the system default is used."
    queue-sidecar-memory-request: "50Mi"
    #@schema/desc "The queue proxy's memory limit. If omitted, no value is specified and the system default is used."
    queue-sidecar-memory-limit: "200Mi"

  #@schema/desc "Network configuration stored in the `config-network` ConfigMap."
  network:
    #@schema/desc "A LabelSelector which determines which namespaces should have a wildcard certificate provisioned."
    namespace-wildcard-cert-selector: ""
    #@schema/desc "The golang text template string to use when constructing the Knative Service's DNS name."
    domain-template: "{{.Name}}.{{.Namespace}}.{{.Domain}}"
    #@schema/desc "Controls the behavior of the HTTP endpoint for the Knative ingress. `Enabled`: The Knative ingress will be able to serve HTTP connection. `Redirected`: The Knative ingress will send a 301 redirect for all http connections, asking the clients to use HTTPS."
    #@schema/validation one_of=["Enabled", "Redirected"]
    http-protocol: "Redirected"
    #@schema/desc "Defines the scheme used for external URLs if autoTLS is not enabled. This can be used for making Knative report all URLs as `https`, for example, if you're fronting Knative with an external loadbalancer that deals with TLS termination and Knative doesn't know about that otherwise."
    #@schema/validation one_of=["http", "https"]
    default-external-scheme: "http"
    #@schema/desc "The minimal duration in seconds over which the Configuration traffic targets are rolled out to the newest revision."
    #@schema/validation min=0
    rollout-duration: 0
  
  #@schema/desc "Network configuration stored in the `config-tracing` ConfigMap."
  tracing:
    #@schema/desc "The type of distributed tracing backend."
    #@schema/validation one_of=["zipkin", "none"]
    backend: "none"
    #@schema/desc "The Zipkin collector endpoint where traces are sent."
    #@schema/validation min_len=24, when=lambda _, ctx: ctx.parent["backend"] == "zipkin"
    zipkin-endpoint: "http://tempo.observability-system.svc.cluster.local:9411/api/v2/spans"
    #@schema/desc "Enable the Zipkin debug mode. This allows all spans to be sent to the server bypassing sampling."
    #@schema/validation one_of=["true", "false"]
    debug: "false"
    #@schema/desc "The percentage (0-1) of requests to trace."
    #@schema/validation min_len=1, max_len=3
    sample-rate: "0.1"

#@schema/desc "Settings for the Ingress controller."
ingress:
  #@schema/desc "Ingress configuration stored in the `config-contour` ConfigMap."
  contour:
    #@schema/desc "If auto-TLS is disabled, fallback to this certificate. An operator is required to setup a TLSCertificateDelegation for this Secret to be used."
    default-tls-secret: ""
    #@schema/desc "Configuration for the external Ingress controller"
    external:
      #@schema/desc "The namespace where the external Ingress controller is installed."
      #@schema/validation min_len=1
      namespace: projectcontour
    #@schema/desc "Configuration for the internal Ingress controller"
    internal:
      #@schema/desc "The namespace where the internal Ingress controller is installed."
      #@schema/validation min_len=1
      namespace: projectcontour

#@schema/desc "Settings for the corporate proxy."
proxy:
  #@schema/desc "The HTTPS proxy to use for network traffic."
  https_proxy: ""
  #@schema/desc "The HTTP proxy to use for network traffic."
  http_proxy: ""
  #@schema/desc "A comma-separated list of hostnames, IP addresses, or IP ranges in CIDR format that should not use a proxy."
  no_proxy: ""
